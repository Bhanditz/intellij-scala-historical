trait ReplyableReactor extends Replyable[Any, Any] {
  _: ReplyReactor =>
}
-----
ScalaFile
  ScTrait: ReplyableReactor
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ReplyableReactor')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TraitParents
        ParametrizedTypeElement: Replyable[Any, Any]
          SimpleTypeElement: Replyable
            CodeReferenceElement: Replyable
              PsiElement(identifier)('Replyable')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleTypeElement: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleTypeElement: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
            PsiElement(])(']')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        SelfType: _
          PsiElement(_)('_')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleTypeElement: ReplyReactor
            CodeReferenceElement: ReplyReactor
              PsiElement(identifier)('ReplyReactor')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
